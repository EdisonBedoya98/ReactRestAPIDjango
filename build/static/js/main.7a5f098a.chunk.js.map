{"version":3,"sources":["BasicTable.js","FileInput.js","FormSentimentIndex.js","App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","createData","name","calories","fat","carbs","protein","BasicTable","props","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","responseData","textArray","map","row","index","key","scope","feeling","entities","entitie","FileInput","uploadFile","bind","e","preventDefault","reader","FileReader","onload","a","text","target","result","console","log","handler","readAsText","files","type","onChange","this","color","React","Component","FormSentimentIndex","state","loading","endpoint","code","confidence","handleChange","setState","value","val","handleSubmit","render","lead","conf","method","body","JSON","stringify","headers","Headers","fetch","then","response","json","data","textAreaValue","Button","onClick","variant","size","CircularProgress","App","rel","href","integrity","crossOrigin","style","width","Body","Title","Subtitle","Text","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7a5f098a.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function BasicTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Texto</TableCell>\n            <TableCell align=\"right\">Sentimiento</TableCell>\n            <TableCell align=\"right\">Entidades</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.responseData.textArray.map((row,index) => (\n\n            <TableRow key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row}\n              </TableCell>\n              <TableCell align=\"right\">{props.responseData.feeling[index]<0.5?'Negativo ðŸ˜Ÿ':'Positivo ðŸ¤—'}</TableCell>\n              <TableCell align=\"right\">{props.responseData.entities[index].map((entitie) => entitie + \" \")}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nclass FileInput extends React.Component {\n    constructor(props) {\n      super(props)\n      this.uploadFile = this.uploadFile.bind(this);\n    }\n    \n    uploadFile(e) {\n      e.preventDefault()\n      const reader = new FileReader()\n      reader.onload = async (e) => {\n        const text = (e.target.result)\n        console.log(text)\n        this.props.handler(text)\n      };\n      reader.readAsText(e.target.files[0])\n\n    }\n    \n    render() {\n      return <span>\n        <input type=\"file\"\n        name=\"myFile\"\n        onChange={this.uploadFile} \n        color=\"primary\"/>\n      </span>\n    }\n}\n\nexport default FileInput;","import React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport BasicTable from \"./BasicTable\";\nimport FileInput from \"./FileInput\";\n\nclass FormSentimentIndex extends Component {\n  state = {\n    loading: false,\n    // clearInput: false,\n    textArray: [],\n    text: \"\",\n    endpoint: \"http://23.21.141.241/model_analysis/\",\n    name: \"\",\n    code: \"\",\n    confidence: 0,\n    feeling: \"\",\n    entities: [],\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handler = (val) => {\n    this.setState({\n      text: val\n    })\n\n    console.log('hi desde el padre '+val)\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { text } = this.state;\n    this.setState({ loading: true });\n    this.render();\n    if (text !== \"\") {\n      const lead = { text };\n      const conf = {\n        method: \"post\",\n        body: JSON.stringify(lead),\n        headers: new Headers({ \"Content-Type\": \"application/json\" }),\n      };\n      fetch(this.state.endpoint, conf)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n          this.setState({\n            textArray: data.textArray,\n            feeling: data.feeling,\n            loading: false,\n            name: data.name,\n            code: data.code,\n            confidence: data.confidence,\n            entities: data.entities,\n          });\n          this.render();\n        });\n    } else {\n      this.setState({ feeling: \"\", loading: false });\n    }\n  };\n\n  render() {\n    const {\n      textArray,\n      loading,\n      text,\n      name,\n      code,\n      confidence,\n      feeling,\n      entities,\n    } = this.state;\n\n    //   console.log(feeling)\n    //     console.log(entities)\n    return (\n      <div>\n        <div className=\"column\">\n          <form>\n            <div className=\"field\">\n              <h1>Texto a analizar</h1>\n              <Container>\n                <Row className=\"justify-content-md-center\">\n                  <div className=\"control \">\n                    <textarea\n                      type=\"text\"\n                      name=\"text\"\n                      value={this.state.textAreaValue}\n                      onChange={this.handleChange}\n                      value={text}\n                      rows={5}\n                      cols={100}\n                      required\n                    />\n                  </div>\n                </Row>\n            <div>\n              <FileInput handler = {this.handler}/>\n            </div>\n                <Row className=\"justify-content-md-center\">\n                  <div className=\"mt-5\">\n                    El idioma del texto analizado es:{\" \"}\n                    {(() => {\n                      if (name === \"\") {\n                        return <div></div>;\n                      } else if (name === \"Spanish\") {\n                        return <div>EspaÃ±ol</div>;\n                      } else if (name === \"English\") {\n                        return <div>Ingles</div>;\n                      } else {\n                        return <div>Idioma no soportado</div>;\n                      }\n                    })()}\n                  </div>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                  <div className=\"mt-5\">\n                    <BasicTable responseData={this.state}></BasicTable>\n                  </div>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                  <div className=\"mt-5\">\n                    <b>Ingrese el texto y analizalo</b>\n                  </div>\n                </Row>\n              </Container>\n            </div>\n            <div className=\"control mt-5\">\n              <Button\n                onClick={this.handleSubmit}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Analizar\n              </Button>\n            </div>\n            <div>{loading ? <CircularProgress /> : \"\"}</div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default FormSentimentIndex;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport FormSentimentIndex from \"./FormSentimentIndex\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"mt-5\" align=\"center\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossOrigin=\"anonymous\"\n      />\n      <div>\n        <h1> MIDANSE </h1>{\" \"}\n        <h6> MinerÃ­a de Datos con AnÃ¡lisis de Sentimientos </h6>{\" \"}\n      </div>{\" \"}\n      <div className=\"App\">\n        <FormSentimentIndex />\n      </div>\n      <div>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Title> InformaciÃ³n sobre la APP </Card.Title>{\" \"}\n            <Card.Subtitle className=\"mb-2 text-muted\"> MIDANSE </Card.Subtitle>{\" \"}\n            <Card.Text>\n              La aplicaciÃ³n MIDANSE clasifica una opiniÃ³n como positiva o\n              negativa.Actualmente funciona bajo dos modelos entrenados con\n              textos de dos dominios: revisiones de servicios hoteleros y tweets\n              sobre el producto Iphone.Ejemplos de opiniones que puede\n              clasificar la aplicaciÃ³n:\n            </Card.Text>{\" \"}\n            <Card.Text>\n              \"Me intentaron estafar un poco con una Suite y el wifi no llegaba\n              a la habitaciÃ³n que nos dieron \" <b>(Negativa)</b>{\" \"}\n            </Card.Text>{\" \"}\n            <Card.Text>\n              \"Todo muy bien, ubicaciÃ³n, limpieza, decoraciÃ³n, tamaÃ±o de la\n              habitaciÃ³n \" <b>(Positiva)</b>{\" \"}\n            </Card.Text>{\" \"}\n            <Card.Body>\n              <Card.Text> Desarrollada por: </Card.Text>{\" \"}\n              <Card.Text>\n                {\" \"}\n                Edison Bedoya(edison.bedoyag @udea.edu.co){\" \"}\n              </Card.Text>{\" \"}\n              <Card.Text>\n                Santiago Quintero(santiago.quinteroh @udea.edu.co){\" \"}\n              </Card.Text>{\" \"}\n              <Card.Text> Antonio Tamayo(ajtamayoh @gmail.com) </Card.Text>{\" \"}\n            </Card.Body>{\" \"}\n            <Card.Text> </Card.Text>{\" \"}\n            <Card.Text>\n              <Card.Text> Departamento de IngenierÃ­a de Sistemas </Card.Text>\n              <Card.Text> Facultad de IngenierÃ­a </Card.Text>{\" \"}\n              <Card.Text> Universidad de Antioquia </Card.Text>\n              <Card.Text> MedellÃ­n - Colombia </Card.Text>{\" \"}\n              <Card.Text> 2019 </Card.Text>{\" \"}\n            </Card.Text>{\" \"}\n          </Card.Body>{\" \"}\n        </Card>{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}